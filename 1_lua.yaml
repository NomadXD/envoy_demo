static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            # typed_config: 
            #   '@type': "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager"
            config:
              upgrade_configs:
              - upgrade_type: websocket
                filters:
                - name: envoy.filters.http.lua
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                    inline_code: |
                      function envoy_on_request(request_handle)
                        for chunk in request_handle:bodyChunks() do
                          request_handle:logTrace("Frame captured by the Lua filter. Chunk: "..chunk:length())
                          if chunk:length() == 0 then
                            request_handle:logTrace("Setting up applicationId to dynamic metadata")
                            local metadata = request_handle:streamInfo():dynamicMetadata()
                            metadata:set("envoy.filters.http.lua", "applicationId", "123456")
                            request_handle:logTrace("ApplicationId added to dynamic meta data")
                          else
                            request_handle:logTrace("Web socket frame captured")
                            local meta = request_handle:streamInfo():dynamicMetadata():get("envoy.filters.http.lua")["applicationId"]
                            request_handle:logTrace("Reading applicationId from meta data: "..meta)
                          end
                        end
                      end
                      
                      function envoy_on_response(response_handle)
                        response_handle:logInfo("Response captured")
                      end
                - name: envoy.router    
              stat_prefix: http_proxy
              codec_type: AUTO
              route_config: 
                name: all
                virtual_hosts:
                  - name: allbackend_cluster
                    domains: 
                      - '*'
                    routes:
                      - match: { prefix: "/admin"}
                        direct_response: {status: 403, body: { inline_string: "Forbidden, yo"} }
                      - match: { prefix: "/service1"}
                        route:
                          cluster: app1_cluster
                      - match: { prefix: "/service2"}
                        route:
                          cluster: app2_cluster
                      - match: { prefix: "/"}
                        route: { host_rewrite: echo.websocket.org, cluster: ws_cluster }
              http_filters:
                  - name: envoy.router
  clusters:
    - name: allbackend_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: allbackend_cluster
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8000
            
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8001
                
    - name: app1_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
            cluster_name: app1_cluster
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 8000
                
    - name: app2_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
            cluster_name: app2_cluster
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 8001


    - name: ws_cluster
      type: logical_dns
      dns_lookup_family: V4_ONLY
      connect_timeout: 10s
      lb_policy: ROUND_ROBIN
      hosts: [{ socket_address: { address: echo.websocket.org, port_value: 80 }}]
    
    

    
                
              
